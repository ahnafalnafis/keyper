#!/usr/bin/env python

import json
import random
import sys
import dotenv
import os
from os.path import dirname, join

# Loading environment variables from .env file.
DOTENV_PATH = join(dirname(__file__), ".env")
dotenv.load_dotenv(DOTENV_PATH)

# Environment variables:
DATABASE = os.environ.get("DATABASE")


def readDB() -> str:
    """Reads the database"""
    with open(DATABASE, "r", encoding="utf-8") as handler:
        return json.load(handler)


def writeDB(content: None) -> None:
    """Writes to the database"""
    with open(DATABASE, "w", encoding="utf-8") as handler:
        json.dump(content, handler)


def generate(size: int) -> str:
    """Generates a unique ID"""
    rnd = ""
    size = abs(size) + 1 if size == 0 else abs(size)

    while len(rnd) <= 10:
        rnd += str(random.choice(range(size * 10)))

    return rnd


def create() -> None:
    """Creates a new password data"""
    data = readDB()

    sitename = input("Site name or App name: ")
    username = input("User name: ")
    password = input("Password: ")

    if sitename != "" and username != "" and password != "":
        ID = generate(len(data))
        data[ID] = {}
        data[ID]["sitename"] = sitename
        data[ID]["username"] = username
        data[ID]["password"] = password
        print("Password saved.")

    else:
        print("Any placeholder cannot be empty.")
        print("Password is not saved.")

    writeDB(data)


def main() -> None:
    args = []

    # Check whether the script was run only with the script command. If it was
    # run by any other command then ignore them. Otherwise, only ignore the
    # script name.
    if args in ["python", "python3", "py"]:
        args = sys.argv[2:]

    else:
        args = sys.argv[1:]

    # Store the command. It increases code readability.
    command = args[0]

    # Handles the arguments.
    if command == "create":
        create()

    else:
        print(f"Command not found: {command}")


main()
